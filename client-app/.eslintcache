[{"/Volumes/ExtendedDrive/IDEWorkspace/VisualStudioCode/utuCodingChallenge/client-app/src/index.tsx":"1","/Volumes/ExtendedDrive/IDEWorkspace/VisualStudioCode/utuCodingChallenge/client-app/src/reportWebVitals.ts":"2","/Volumes/ExtendedDrive/IDEWorkspace/VisualStudioCode/utuCodingChallenge/client-app/src/App.tsx":"3","/Volumes/ExtendedDrive/IDEWorkspace/VisualStudioCode/utuCodingChallenge/client-app/src/features/CryptoList.tsx":"4"},{"size":621,"mtime":1612311333000,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1612310831000,"results":"7","hashOfConfig":"6"},{"size":677,"mtime":1612314549000,"results":"8","hashOfConfig":"6"},{"size":2973,"mtime":1612317975000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"9gzrpa",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/ExtendedDrive/IDEWorkspace/VisualStudioCode/utuCodingChallenge/client-app/src/index.tsx",[],["20","21"],"/Volumes/ExtendedDrive/IDEWorkspace/VisualStudioCode/utuCodingChallenge/client-app/src/reportWebVitals.ts",[],"/Volumes/ExtendedDrive/IDEWorkspace/VisualStudioCode/utuCodingChallenge/client-app/src/App.tsx",["22"],"import { Container, LinearProgress } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport \"./App.css\";\nimport { CryptoType } from \"./CryptoType\";\nimport CryptoList from \"./features/CryptoList\";\n\nconst getCryptos = async (): Promise<CryptoType[]> =>\n  await await (await fetch(\"http://localhost:5000/api/crypto\")).json();\n\nconst App = () => {\n  const { data, isLoading, error } = useQuery<CryptoType[]>(\n    \"crypto\",\n    getCryptos\n  );\n\n  console.log(data);\n\n  if (isLoading) return <LinearProgress />;\n\n  return (\n    <Container className='App'>\n      <CryptoList cryptos={data} />\n    </Container>\n  );\n};\n\nexport default App;\n","/Volumes/ExtendedDrive/IDEWorkspace/VisualStudioCode/utuCodingChallenge/client-app/src/features/CryptoList.tsx",["23"],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":12,"column":28,"nodeType":"30","messageId":"31","endLine":12,"endColumn":33},{"ruleId":"28","severity":1,"message":"32","line":5,"column":3,"nodeType":"30","messageId":"31","endLine":5,"endColumn":13},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation"]